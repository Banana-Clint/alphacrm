{"version":3,"file":"static/js/320.23d69f35.chunk.js","mappings":"4JAEO,MAAMA,EAAeA,IACnBC,UACL,IACE,MAAMC,QAAiBC,MAAM,4CACvBC,QAAgBF,EAASG,OAC/BC,QAAQC,IAAIH,GACZI,GAASC,EAAAA,EAAAA,IAAuBL,GAClC,CAAE,MAAOM,GACPJ,QAAQI,MAAM,0BAA2BA,EAC3C,G,aCJW,SAASC,EAAYC,GAA4B,IAA3B,QAAEC,EAAO,YAAEC,GAAaF,EAC3D,MAAMJ,GAAWO,EAAAA,EAAAA,MACXX,GAAUY,EAAAA,EAAAA,KAAaC,GAAUA,EAAMb,QAAQc,OAC/CC,GAAYH,EAAAA,EAAAA,KAAaC,GAAUA,EAAMb,QAAQe,YACjDT,GAAQM,EAAAA,EAAAA,KAAaC,GAAUA,EAAMb,QAAQM,QAMnD,OAJAU,EAAAA,EAAAA,YAAU,KACRZ,EAASR,IAAe,GACvB,CAACQ,IAEAW,GACKE,EAAAA,EAAAA,KAAA,KAAAC,SAAG,uBAGRZ,GACKa,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,0BAAwBZ,MAIlCa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeF,SAAA,EAC5BC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,uBAAsBF,SAAA,EACnCD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBACJD,EAAAA,EAAAA,KAAA,UAAQI,QAASZ,EAASW,UAAU,eAAcF,SAAC,UAErDD,EAAAA,EAAAA,KAAA,OAAKG,UAAU,aAAYF,SACxBlB,EAAQsB,KAAKC,IACZN,EAAAA,EAAAA,KAAA,UAEEG,UAAU,aACVC,QAASA,KAAOnB,QAAQC,IAAIoB,GAAUb,EAAYa,GAAQd,GAAS,EAAES,SAEpEK,EAAOC,OAJHD,EAAOE,UAUxB,C","sources":["Components/ReduxDataStore/Clients/ClientsThunk.js","Components/Dashboard/ClientData/EmailCatalog.js"],"sourcesContent":["import { fetchClientDataSuccess } from './ClientsAction';\r\n\r\nexport const fetchClients = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/Api/Client/Clients');\r\n      const clients = await response.json();\r\n      console.log(clients)\r\n      dispatch(fetchClientDataSuccess(clients));\r\n    } catch (error) {\r\n      console.error('Error fetching clients:', error);\r\n    }\r\n  };\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchClients } from '../../ReduxDataStore/Clients/ClientsThunk.js';\r\nimport './EmailCatalog.css';\r\n\r\n\r\n//Returns A React Component Populated With Client Emails \r\nexport default function EmailCatalog({ onClose, setUserInfo }) {\r\n  const dispatch = useDispatch();\r\n  const clients = useSelector((state) => state.clients.data);\r\n  const isLoading = useSelector((state) => state.clients.isLoading);\r\n  const error = useSelector((state) => state.clients.error);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchClients());\r\n  }, [dispatch]);\r\n\r\n  if (isLoading) {\r\n    return <p>Loading clients...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error loading clients: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"email-catalog\">\r\n      <div className=\"email-catalog-header\">\r\n        <h2>Client Emails</h2>\r\n        <button onClick={onClose} className=\"close-button\">X</button>\r\n      </div>\r\n      <div className=\"email-list\">\r\n        {clients.map((client) => (\r\n          <button \r\n            key={client.id} \r\n            className=\"email-item\"\r\n            onClick={() => {console.log(client) ; setUserInfo(client);onClose()}}\r\n          >\r\n            {client.email}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["fetchClients","async","response","fetch","clients","json","console","log","dispatch","fetchClientDataSuccess","error","EmailCatalog","_ref","onClose","setUserInfo","useDispatch","useSelector","state","data","isLoading","useEffect","_jsx","children","_jsxs","className","onClick","map","client","email","id"],"sourceRoot":""}